>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("a", 1)

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("a", 0)
Traceback (most recent call last):
ValueError: a must be greater than 0

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("a", "a")
Traceback (most recent call last):
TypeError: a must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("a", -5)
Traceback (most recent call last):
ValueError: a must be greater than 0

>>> base_geometry = BaseGeometry()
>>> base_geometry.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("a")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("a", True)
Traceback (most recent call last):
TypeError: a must be an integer

base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", ([3]))
Traceback (most recent call last):
TypeError: age must be an integer

